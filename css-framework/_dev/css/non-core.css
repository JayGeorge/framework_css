/*! Notes...

    Author: Jay George
    Author URI: https://jaygeorge.co.uk

    ABOUT THIS CSS
    ===================================================
    - Only edit filename.css, then process with Codekit to output into prod/
    - Class name prefixes are influenced by Namespaces article - http://csswizardry.com/2015/03/more-transparent-ui-code-with-namespaces/
        - I would usually drop the .c- namespace since everything is an inferred component unless prefixed otherwise BUT using the c- namespace makes it much easier to search and replace since classes are more unique. A good example is if you wanted to call a class .article. Replacing that would be a nightmare because you'd also run into article elements.
    - Other class name prefixes are based on microformats
    - Class relationships are based on BEM structure
    - Order of CSS influenced by ITCSS - https://twitter.com/itcss_io
    - Layout snippets inspired by https://smolcss.dev/
    - Where CSS groups include framework names such as WordPress or Genesis it means HTML/CSS in this group is based on these solid frameworks

*/
:root {
    /* GROUP VARIABLES -- LAYOUT -- GRID
    =================================================== */
    --grid-template-columns-golden-ratio-left: 1.618fr 1fr;
    --grid-template-columns-golden-ratio-right: 1fr 1.618fr;
    --grid-template-columns-inline-start-big: 60fr 40fr;
    --grid-template-columns-inline-end-big: 40fr 60fr;
    --grid-template-columns-offset-inline-end-column-1: calc(max(46em, 42%) + var(--spacing-l-1));
    --grid-template-columns-offset-inline-end-column-2: calc(100% - var(--grid-template-columns-offset-inline-end-column-1));
    --grid-template-columns-offset-inline-end: var(--grid-template-columns-offset-inline-end-column-1) 1fr;
    /* GROUP VARIABLES -- SPACING
    =================================================== */
    --spacing-m-2: 1.65rem;
    --spacing-m-then-spacing-l-upper-mq: var(--spacing-m);

    --spacing-l-static: 1.8rem;

    --spacing-l-1-static: 2.5em;

    --spacing-l-4-static: 7rem;
    /* or */
    /* --spacing-l-4: min(25vw, 9.5rem); */
    /* GROUP VARIABLES -- SPACING -- ICONS
    =================================================== */
    --spacing-icon-s: 0.2rem;
    --spacing-icon-m: 0.3rem;
    --spacing-icon-l: 0.6rem;
    /* GROUP VARIABLES -- DECORATION -- TEXT -- WEIGHTS -- VARIABLE
    =================================================== */
    /* Used with font-variation-settings, e.g. font-variation-settings: var(--font-family-main-variation-normal); */
    --font-family-main-variation-normal: 'ital' 0, 'wdth' 100, 'wght' 400;
    /* GROUP VARIABLES -- DECORATION -- COLOURS
    =================================================== */
    /*
        - Use HSL. More info here - https://www.sarasoueidan.com/blog/hex-rgb-to-hsl/
        - Complimentary colour = Hue - 180
        - Triad colours = Hue - or + 120
        - Analogous color combinations = 30Â° separating the hues.
        - You can also create monochromatic harmonies easily, with one main hue and then tweaking the lightness to get different tints and shades of that hue.
    */
    /* Example of dividing more */
    --colour-purple-legacy: purple;
    --colour-purple-hue: 132 35;
    --colour-purple-1: oklch(50% var(--colour-purple-hue));
    --colour-purple-2: oklch(60% var(--colour-purple-hue));
    --colour-purple-transparent: lch(50% var(--colour-purple-hue) / 20%);

    --colour-navy: hsl(226deg 25% 14%);
    --colour-navy-hsl: 226deg 25% 14%;
    --colour-navy-overlay: hsl(var(--colour-navy-hsl) / 20%);
    /* e.g. for icons on colour-navy background */
    --colour-navy-reversed: hsl(226deg 14% 25%);

    --colour-orange: hsl(25, 100%, 53%);
    --colour-turquoise: hsl(184, 65%, 47%);
    /* GROUP VARIABLES -- DECORATION -- COLOURS -- THEME -- GRADIENTS
    =================================================== */
    --colour-gradient-orange: radial-gradient(ellipse at bottom right, hsl(41, 100%, 69%) 0%,hsl(25, 100%, 50%) 100%);
    /* GROUP VARIABLES -- DECORATION -- COLOURS -- THEME -- BRANDS
    =================================================== */
    /* https://about.twitter.com/company/brand-assets */
    --colour-brand-twitter: hsl(206, 82%, 63%);
    --colour-brand-facebook: hsl(221, 44%, 41%);
    --colour-brand-google-plus: hsl(7, 71%, 55%);
    /* https://www.youtube.com/yt/brand/en-GB/color.HTML */
    --colour-brand-youtube: hsl(0, 74%, 46%);
    /* https://business.pinterest.com/en/brand-guidelines */
    --colour-brand-pinterest: hsl(353, 92%, 39%);
    /* https://brand.linkedin.com/visual-identity/color-palettes */
    --colour-brand-linkedin: hsl(201, 100%, 35%);
    --colour-brand-rss: hsl(36, 65%, 59%);
    /* GROUP VARIABLES -- DECORATION -- COLOURS -- PRESET - SOFT {LIGHT COLOURS}
    =================================================== */
    /* background: antiquewhite; */
    /* background: floralwhite; */
    /* background: ghostwhite; */
    /* background: honeydew; */
    /* background: lavenderblush; */
    /* background: linen; */
    /* background: mintcream; */
    /* background: mistyrose; */
    /* background: oldlace; */
    /* background: papayawhip; */
    /* background: seashell; */
    /* background: snow; */
    /* GROUP VARIABLES -- DECORATION -- COLOURS -- GRAYSCALE
    =================================================== */
    /* If you want to use a hue base for the grey... otherwise set to 0deg */
    --colour-grey-hue: 225deg 10%;

    /* Dark to light */
    /* --colour-black-off: hsl(0, 0%, 20%); */
    /* https://twitter.com/AustinTByrd/status/1105822085362925568 */
    /* --colour-black-off: hsl(240, 14%, 10%); */
    --colour-black-off: hsl(var(--colour-grey-hue), 10%);
    /* AA compliant as grey text on hsl(0, 0%, 98%) background. */
    --colour-grey-reading-fa: hsl(var(--colour-grey-hue) 45%);
    /* AA compliant as grey text on white background. AAA is 595959 */
    --colour-grey-reading: hsl(var(--colour-grey-hue) 46%);
    /* Not quite AA as grey text on white background, but you could use for less critical text such as meta or for 18pt and above text. Do not use it for a sentence. */
    --colour-grey-reading-18pt: hsl(var(--colour-grey-hue) 58%);
    /* For `text-decoration-color` of `color-grey-light` text */
    --colour-grey-light-focus: hsl(var(--colour-grey-hue) 67%);
    --colour-grey-light-1: hsl(var(--colour-grey-hue) 80%);
    --colour-grey-light-2: hsl(var(--colour-grey-hue) 90%);
    --colour-grey-light-3: hsl(var(--colour-grey-hue) 93%);
    --colour-grey-light-4: whitesmoke;
    --colour-grey-light-5: hsl(var(--colour-grey-hue) 97%);
    --colour-grey-light-6: hsl(var(--colour-grey-hue) 99%);
    /* GROUP VARIABLES -- DECORATION -- TEXT -- SIZES
    =================================================== */
    /* Where you may want to space the line-height slightly e.g. You may want to use -spaced because a paragraph contains short information and links, so you'd like to make it breathe a bit more. Use _sparingly_ since it exceeds the max recommended line-height of 1.5 */
    --font-size-spaced-line-height: 1.6;

    /* GROUP VARIABLES -- DECORATION -- TEXT -- SIZES -- DIFFERENT FONT
    =================================================== */
    /* Use variable names like this if you have a mixture of larger fonts with different typefaces that need different sizes */
    /* --font-size-l-1-decorative: ; */
    /* --font-size-l-1-line-height-decorative: ; */
    /* --font-size-l-2-decorative: ; */
    /* --font-size-l-2-line-height-decorative: ; */

    /* GROUP VARIABLES -- DECORATION -- TEXT -- SIZES -- AUGMENTED FOURTH
    =================================================== */
    /* Based on Augmented Fourth - https://type-scale.com/ */
    /* Smaller for entries, where typically titles are longer. If you need further control you can do something like media (max-width: 499px) .s-entry-header--with-long-title - font-size: 0.74em; */
    --font-size-l-2-entry: clamp(5.653em * 0.75, 11vw, 5.653em);
    --font-size-l-2-line-height: 1.1;
    --font-size-l-2-entry-line-height: 1.1;
    /* GROUP VARIABLES -- DECORATION -- TEXT -- SIZES -- PERFECT FIFTH
    =================================================== */
    /* Based on Perfect Fifth - https://type-scale.com/ */
    --font-size-s-x-x: 0.667rem;

    /* Outside type scale */
    --font-size-s: clamp(1.3em * 0.85, 4vw, 1.3em);
    --font-size-s-line-height: 1.4;
    /* -- */

    --font-size-s-1: clamp(1.4em, 4vw, 1.5em);
    --font-size-s-1-line-height: 1.4;

    --font-size-m: clamp(2.25em * 0.695, 5.9vw, 2.25em);
    --font-size-m-line-height: 1.35;

    --font-size-l: clamp(3.375em * 0.8, 5.9vw, 3.375em);
    --font-size-l-line-height: 1.15;

    --font-size-l-1: clamp(5.063em * 0.725, 6vw, 5.063em);
    --font-size-l-1-line-height: 1.05;

    --font-size-l-2: clamp(7.594em * 0.7, 15vw, 7.594em);
    --font-size-l-2-line-height: 1;
    /* GROUP VARIABLES -- DECORATION -- TEXT -- SIZES -- GOLDEN RATIO
    =================================================== */
    /* Based on Golden Ratio - https://type-scale.com/ */
    --font-size-s-x-x: 0.618em;
    --font-size-s-x-x-custom: 0.73em;
    --font-size-s-x-x-rem: 0.618rem;

    /* Custom, 0.8rem is too small */
    --font-size-s-x: 0.85em;

    --font-size-m: 1.618em;
    --font-size-m-line-height: 1.4;

    --font-size-l: clamp(2.618em * 0.65, 7vw, 2.618em);
    --font-size-l-line-height: 1.25;
    --font-size-l-line-height-entry: 1.1;

    --font-size-l-1: clamp(4.236em * 0.6, 10vw, 4.236em);
    --font-size-l-1-line-height: 1.15;

    --font-size-l-2: clamp(6.854em * 0.7, 13.5vw, 6.854em);
    --font-size-l-2-line-height: 0.99;

    --font-size-l-3: 11.089rem;
    /* GROUP VARIABLES -- DECORATION -- ICONS -- SIZES
    =================================================== */
    --icon-size-s: 1.35rem;
    --icon-size-m: 1.5rem;
    --icon-size-m-2: 1.8rem;
    --icon-size-l: 3rem;
    --icon-size-l-2: 5rem;
    /* GROUP VARIABLES -- DECORATION -- TEXT -- OTHER
    =================================================== */
    --letter-spacing-s: 3px;
    --letter-spacing-m: 5px;
    --letter-spacing-l: 7px;
    /* GROUP VARIABLES -- DECORATION -- TEXT SHADOWS - ordered from light to dark variants
    =================================================== */
    --text-shadow-light: 1px 2px 5px hsla(0, 98%, 16%, 0.3);
    /* GROUP VARIABLES -- DECORATION -- SEPARATORS -- BORDERS - ordered from light to dark variants
    =================================================== */
    --border-grey-s: 3px solid grey;
    --border-grey-m: 5px solid grey;
    /* GROUP VARIABLES -- DECORATION -- BORDER RADIUS
    =================================================== */
    --border-radius-s: 3px;
    --border-radius-m: 5px;
    --border-radius-l: 7px;
    /* GROUP VARIABLES -- DECORATION -- SEPARATORS -- BOX SHADOWS - ordered from light to dark variants
    =================================================== */
    --box-shadow-clean:
        0 2px 5px rgba(0, 0, 0, 0.02),
        0 2px 3px rgba(0, 0, 0, 0.05),
        0 1px 0 rgba(0, 0, 0, 0.06);
    --box-shadow-s-light: 0 1px 8px hsla(0, 0%, 0%, 0.09);
    --box-shadow-s-light-s: 0 0 5px hsla(0, 0%, 0%, 0.1);
    --box-shadow-s-light-t: 0 -7px 7px -7px hsla(0, 0%, 0%, 0.09);
    --box-shadow-s-light-b: 0 10px 9px -8px hsla(0, 0%, 0%, 0.09);
    --box-shadow-s-light-b-2: 0 10px 9px -8px hsla(0, 0%, 0%, 0.05);
    --box-shadow-s-light-b-3: 0 10px 9px hsla(0, 0%, 0%, 0.06);
    --box-shadow-light-r: 10px 0 8px -8px hsla(0, 0%, 0%, 0.03);
    --box-shadow-s-light-inset: inset 0 0 6px hsla(0, 0%, 0%, 0.1);
    --box-shadow-s-light-t-inset: inset 0 7px 7px 0 hsla(0, 0%, 0%, 0.09);
    --box-shadow-s-light-b-inset: inset 0 -10px 9px -8px hsla(0, 0%, 0%, 0.09);
    --box-shadow-s: 0 1px 8px hsla(0, 0%, 0%, 0.2);
    --box-shadow-s-focus: 7px 15px 40px hsla(0, 0%, 0%, 0.06), -7px 15px 40px hsla(0, 0%, 0%, 0.06);
    --box-shadow-s-focus-hue: 7px 15px 40px hsla(200, 100%, 30%, 0.06), -7px 15px 40px hsla(200, 100%, 30%, 0.15);
    --box-shadow-s-t: 0 -7px 15px -7px hsla(0, 0%, 0%, 0.1);
    --box-shadow-s-b: 0 10px 9px -8px hsla(0, 0%, 0%, 0.2);
    --box-shadow-s-left: -10px 0 9px -8px hsla(0, 0%, 0%, 0.2);
    --box-shadow-s-inset: 0 0 9px hsla(0, 0%, 0%, 0.2);
    --box-shadow-s-inset-right: inset -11px 0 7px -5px hsla(0, 0%, 0%, 0.09);
    --box-shadow-s-dark: 0 2px 4px hsla(0, 0%, 0%, 0.4);
    --box-shadow-s-dark-right: 10px 0 6px -6px hsla(0, 0%, 0%, 0.05);
    --box-shadow-b-1: 0 5px hsla(0, 0%, 0%, 0.1);

    --box-shadow-tailwind: 0 1px 3px 0 rgb(0 0 0 / .1), 0 1px 2px -1px rgb(0 0 0 / .1);

    --box-shadow-focus: 0 0 15px var(--colour-orange);
    --box-shadow-focus: 0 0 0 3px var(--colour-blue);
    /* GROUP VARIABLES -- DECORATION -- OTHER
    =================================================== */
    --filter-image-boost: contrast(105%) saturate(1.08);
    --filter-image-boost-1: contrast(105%) saturate(1.25);
    /* GROUP VARIABLES -- ANIMATIONS -- TRANSITIONS
    =================================================== */
    /* Molecules > Pagination > (Cross Pollinated) */
    --animation-transition-fast: all 0.15s ease-in-out 0s;
    /* GROUP VARIABLES -- ANIMATIONS -- ANNI
    =================================================== */
    /* Notes...

        - My own mini animation framework. Very very basic. Essentially just variables and class names.
        - I've called it ANNI so it's easy to find it with cmd + f

    */
    --anni-duration: 1s;
    --anni-stagger: 0.12s;
    /* GROUP VARIABLES -- ANIMATIONS -- TIMING
    =================================================== */
    --animation-timing-function-linear-out-slow-in: cubic-bezier(0, 0, 0.2, 1);
    --animation-timing-function-in-cubic: cubic-bezier(0.55, 0.06, 0.68, 0.19);
    --animation-timing-function-in-sine: cubic-bezier(0.47, 0, 0.75, 0.72);

    --animation-timing-function-out-cubic: cubic-bezier(0.22, 0.61, 0.36, 1);
    --animation-timing-function-out-quadratic: cubic-bezier(0.22, 0.61, 0.36, 1);
    --animation-timing-function-wipe: cubic-bezier(.25, 1, .30, 1);
    /* GROUP VARIABLES -- ANIMATIONS -- ANIMATIONS
    =================================================== */
    --animation-site-header-background: 1.5s cubic-bezier(.25, 1, .30, 1) wipe-in-down both;

    /* GROUP VARIABLES -- OTHER
    =================================================== */
    /* Used to push down the columns for the overlay */
    --overlay-height-push: 11vh;

    /* After standard variables you can add variables that are not part of the framework e.g. */
    /* GROUP VARIABLES -- NOT PART OF FRAMEWORK -- PLUGINS -- FREE TO BOOK
    =================================================== */
    /* GROUP VARIABLES -- NOT PART OF FRAMEWORK -- OTHER
    =================================================== */
}
/* Fallback for browsers that don't support clamp e.g. my iPad Mini */
/* @supports not (font-size: clamp(calc(3.052em * 0.8), 11vw, 3.052em)) {
    :root {
        --font-size-l: 2.441em;
        --font-size-l-1: 3.052em;
        --font-size-l-2-entry: 3.4em;
    }
} */
/* --mq-root-variable-adjustments-1 */
@media (min-width: 450px) {
    :root {
        /* GROUP VARIABLES -- SPACING
        ===================================================  */
        --spacing-m-2: 2rem;
    }
}
/* --mq-root-variable-adjustments-2 */
@media (min-width: 730px) {
    :root {
        --spacing-m-then-spacing-l-upper-mq: var(--spacing-l);
    }
}
/* GROUP VARIABLES -- DECORATION -- COLOURS -- THEMING
=================================================== */
/* Notes...

    - An example if you're using theming, e.g. flipping colours for different pages

*/
:root {
    --colour-primary-text: white;
    --colour-primary-background: black;

    --colour-secondary-text: black;
    --colour-secondary-background: white;
}
@layer elements {
    /* Defaults */
    html {
        color: var(--colour-primary-text);
        background: var(--colour-primary-background);
    }
}
@layer scope {
    .s-social {
        --colour-accent-background: var(--colour-red-legacy);
        @supports (background: lch(0% 0 0)) {
            --colour-accent-background: lch(var(--colour-red-lch));
        }
    }
    .s-light {
        --colour-primary-text: black;
        --colour-primary-background: white;
    
        --colour-secondary-text: white;
        --colour-secondary-background: black;
    }
}




/* GROUP RESET / FRAMEWORK / (NON CORE) / SCROLLBARS
=================================================== */
@layer base {
    /* To hide search bars in general, enable the below. Source: https://stackoverflow.com/questions/3296644/hiding-the-scrollbar-on-an-html-page; */
    /* html { */
    /* Firefox */
    /* scrollbar-width: none; */
    /* IE and Edge */
    /* -ms-overflow-style: none; */
    /* } */

    /* Chrome, Safari, and Opera */
    /* html::-webkit-scrollbar {
        width: 0px;
    } */
}




/* GROUP ELEMENTS / FRAMEWORK / (NON CORE)
=================================================== */
@layer elements {
    html {
        /* Consider disabling this if you have pages that require lots of cmd + f https://css-tricks.com/downsides-of-smooth-scrolling/ */
        scroll-behavior: smooth;
        /*
        h2 {
            scroll-margin-top: 2em;
        }
        */
    }

    body {
        /* So scroll bars hide like in Safari */
        -ms-overflow-style: -ms-autohiding-scrollbar;
    }

    pre,
    code {
        /* e.g. try <code><?php bloginfo('stylesheet_url'); ?></code> and you'll see that it overflows on smaller screens */
        overflow-x: scroll;
        padding-block-end: var(--spacing-s-x);
        padding-block-start: var(--spacing-s-x);
        margin-block-end: var(--spacing-m);
        color: var(--colour-grey-reading);
    }

    /* Notes...

        For HTML examples on using blockquote along with references see my CSS.text file in my wiki, under Blockquotes

    */
    blockquote {
        position: relative;
        padding-inline-start: var(--spacing-m-2);
        /* margin-block-end: var(--spacing-l); */
        margin-inline-start: var(--spacing-s-x-x);
        border-left: 4px solid turquoise;
    }

    blockquote p,
    blockquote cite {
        color: var(--colour-grey-reading);
    }

    blockquote p {
        quotes: "â" "â" "â" "â";
    }

    blockquote p::before {
        content: open-quote;
    }
    blockquote p::after {
        content: close-quote;
    }

    blockquote::before {
        position: absolute;
        top: -0.3em;
        left: 0.4em;
        font-size: var(--font-size-m);
        color: var(--colour-grey-light-1);
    }

    blockquote p:last-child {
        /* e.g. prevent the decorative left border from extending beyond the text */
        padding-block-end: 0;
    }

    figcaption {
        padding-block-start: var(--spacing-s);
        font-size: var(--font-size-s-x);
        font-style: italic;
    }

    cite {
        font-size: 0.75em;
    }

    hr {
        height: 2px;
        margin-block-end: var(--spacing-l);
        margin-top: var(--spacing-l);
        background: var(--colour-grey-light-1);
        border: 0;
    }

    /*audio {
        box-shadow: 0 0 10px rgba(255,255,255,0.25);
    }*/

    /* Aspect ratio */
    @supports (aspect-ratio: 16/9) {
        iframe[src*="youtube"],
        iframe[src*="vimeo"] {
            /* Need supports otherwise height: auto; causes issues with the width */
            height: auto;
            aspect-ratio: 16/9;
        }
    }

    iframe {
        width: 100%;
        border: none;
    }
}




/* GROUP ELEMENTS / FRAMEWORK / (NON CORE) / TEXT / LINK STYLES {/ LINKS }
=================================================== */
/* Notes...

    - Link styles are stored as group selectors rather than scattered, since we have multiple properties here.
    - Do not put transitions on all links, it makes keyboard navigation feel slower. Instead, use transition animations on an individual basis e.g. skip-to-content
    https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration

*/

@layer elements {
    /* Default */
    a {
        text-decoration-color: red;
        text-decoration-line: underline;
        text-decoration-line: underline overline;
        text-decoration-line: line-through;

        /* https://css-tricks.com/almanac/properties/t/text-decoration-style */
        text-decoration-style: dashed;
        text-decoration-style: wavy;
        text-decoration-style: dotted;
        text-decoration-style: solid;
        text-decoration-style: double;

        /* https://css-tricks.com/almanac/properties/t/text-underline-position */
        text-underline-position: left;
        text-underline-position: right;
        text-underline-position: under;
        /* https://webkit.org/blog/8718/new-webkit-features-in-safari-12-1/ */
        /* You can also specify from-font to both of these properties which will pull the relevant metric from the used font file itself. */
        text-underline-offset: 0.5em;
        text-decoration-thickness: 1px;
    }
}

@layer utilities {
    /* Example taken from Typewolf. This should probably only be used for entry content because it might negatively affect elements such as nav */
    .u-link-style-2 a {
        text-decoration-line: none;
        border-bottom: 1px solid var(--colour-green-light);
        box-shadow: inset 0 -7px 0 var(--colour-green-light);
        transition: background 0.3s ease-out;
    }

    .u-link-style-2 a:hover {
        background: #f5f1f2;
    }

    /* Notes...

        - Use "u-link-style-custom" prefix then these are pretty much rare/1 off
        - Still include them in this group so we can see all link styles for easy maintenance

    */
    .u-link-style-custom-1 {
        color: var(--colour-grey-reading);
    }
    /* GROUP ELEMENTS / FRAMEWORK / (NON CORE) / TEXT / LINK STYLES {/ LINKS } / BLOCK
    =================================================== */
    /* Notes...

        If you wrap a link around everything you need to clear it.

    */

    /* HTML example...

    <a href="">
            <div>
                Some content
            </div>
        </a>

    */
    .u-link-style-block {
        /* Notes...
            e.g. >> /what-we-do-static

            Not display: inline-block; because this allows
            images to bust out of their containers on Firefox and Internet Explorer
        */
        display: block;
    }
}




/* GROUP COMPONENTS / FRAMEWORK / (NON CORE) / SLIDE
=================================================== */
@layer components {
    /* Notes...

        - Used to introduce a new section

    */
    /* HTML Example...

        .o-slide

    */
    /* Optional for vertical centering content */
    /* .o-slide { */
        /* display: flex; */
        /* flex-direction: column; */
        /* justify-content: center; */

        /* min-height: 90vh; <-- Careful using this as it could cause spacing inconsistencies */
    /* } */
    .o-slide {
        padding-block: var(--spacing-vh-s);
    }

    .o-slide > *:last-child {
        padding-block-end: 0;
    }

    .o-slide > *:first-child {
        padding-block-start: 0;
    }
}
@layer modifiers {
    .o-slide--compressed-b-total {
        padding-block-end: 0;
    }
}

/* Notes...

    - For the 'observe sections' intersection observer component to trigger EVENLY, we can't always rely on padding-block-end.
    - Therefore for slides, we sometimes need to switch from bottom padding-block-end to padding-block-start on the next slide instead.
    - The following rules handle that

*/
/* Example rules...
.o-slide[data-observe-sections__section="dark"] {
    padding-block-end: 0;
}

.o-slide[data-observe-sections__section="dark"] + .o-slide {
    padding-block-start: var(--spacing-vh-s);
}
*/




/* GROUP OBJECTS / FRAMEWORK / GSAP
=================================================== */
/* Need the JS in the <head> in my framework for this to work */
@layer ui {
    .js:not([data-js="document-loaded"]) [data-gsap="split-text-immediately"] {
        /* Hide split text elements until the document is loaded and we can successfully animate them witout any issues as per https://greensock.com/forums/topic/17049-split-text-before-font-render-issue */
        opacity: 0;
    }
}




/* GROUP OBJECTS / FRAMEWORK / (NON CORE) / HERO BUTTONS { / BUTTON HERO}
=================================================== */
/* Notes...

    - Put some space around a group of buttons
    - Center the buttons

*/

/* HTML Example...

    <div class="o-hero-buttons">
        <div class="c-btn">
            <a href="">
                Some button
            </a>
        </div>
        <div class="c-btn">
            <a href="">
                Some button
            </a>
        </div>
    </div>

*/

/* Modifiers...

    .o-hero-buttons--left <- align left e.g. you might use this for hero buttons below a map

*/
@layer objects {
    .o-hero-buttons {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: var(--spacing-m);

        padding: var(--spacing-l-1);
        text-align: center;
        &:last-child {
            padding-block-end: 0;
        }
    }

    .o-hero-buttons--left {
        justify-content: flex-start;
    }

    /* --mq-max-width-reading-before */
    @media (max-width: 599px) {
        .o-hero-buttons {
            text-align: left;
            padding-inline-start: var(--spacing-l);
        }
    }
    /* GROUP OBJECTS / FRAMEWORK / (NON CORE) / HERO BUTTONS { / BUTTON HERO} / SPACING MODIFICATIONS
    =================================================== */
    .o-hero-buttons + h2 {
        padding-block-start: var(--spacing-s);
    }

    h2 + .o-hero-buttons {
        padding-block-start: var(--spacing-s-1);
    }
}
@layer components {
    /* Needs to be at the component levElements to override .c-btn defaults */
    .o-hero-buttons :is(.c-btn, [type="submit"]) {
        /* Since spacing is now controlled with flex */
        margin: unset;
    }
}




/* GROUP OBJECT / FRAMEWORK / (NON CORE) / LAYOUT / FULL WIDTH {BUST OUT OF CONTAINER}
=================================================== */
/* Notes...

    - When you need to bust out of containers such as .s-entry-content
    - Based on https://css-tricks.com/full-width-containers-limited-width-parents/

*/

/* HTML Example...

    <div class="o-full-width-wrapper">
        e.g. <img/>
    </div>

*/
@layer objects {
    .o-full-width-wrapper {
        position: relative;
        width: 100vw;
        left: 50%;
        right: 50%;
        margin-inline: -50vw;
    }
}




/* GROUP COMPONENTS / FRAMEWORK / MARKETING CONTENT
=================================================== */
/* HTML Example...

    .c-marketing-content
        h2
        p

*/
@layer components {
    .c-marketing-content {
        max-width: var(--max-width-1);
        padding: var(--spacing-l-3) var(--spacing-l);
        margin-inline-start: auto;
        margin-inline-end: auto;
        text-align: center;
    }
}




/* GROUP COMPONENTS / FRAMEWORK / (NON CORE) / DECORATIONAL
=================================================== */
/* Utility-like classes that are not tied to a specific piece of UI */
/* e.g.
@layer components {
    .c-subtext {
        color: var(--colour-grey);
        border-bottom; 1px solid grey;
    }

    .c-eyebrow-heading {
        text-transform: uppercase;
    }

    .c-separator {
        position: relative;
    }

    .c-separator::before {
        --width: 20%;
        content: "";
        position: absolute;
        bottom: 0;
        width: var(--width);
        left: calc((100% - var(--width)) / 2);
        border-bottom: 1px solid var(--colour-black-off-2);
    }
}
*/



/* GROUP COMPONENTS / FRAMEWORK / (NON CORE) / BUTTONS / TYPES / ANIMATION
=================================================== */
/* Left and Right Arrows */
/* HTML Example...

    <a href="{{ url }}" class="btn__left"><svg/> Previous</a>

*/
@layer components {
    /* Components > Pagination > (Cross Pollinated) */
    /* a*/
    :where(.c-btn__left, .c-btn__right) svg {
        position: relative;
        /* Pagination Button e.g. right arrow inside button moves forward */
        font-size: 1.5em;
        transition: var(--animation-transition-fast);
        top: -0.075rem;
    }
    /* Components > Pagination > (Cross Pollinated) */
    /* a*/
    .c-btn__left {
        & svg {
            right: 0;
        }
        &:hover svg {
            right: 5px;
        }
    }
    /* a*/
    .c-btn__right {
        & svg {
            left: 0;
        }
        &:hover svg {
            left: 5px;
        }
    }
}
/* GROUP COMPONENTS / FRAMEWORK / (NON CORE) / BUTTONS / SIZES
=================================================== */
@layer modifiers {
    /* Small */
    .c-btn--s a {
        padding: 0.6rem var(--spacing-m);
    }
}




/* GROUP COMPONENTS / FRAMEWORK / (NON CORE) / HERO BLOCK
=================================================== */
/* Notes...

    - Can contain anything e.g. Clients
    - Cross pollinated with core.css e.g. .c-hero-block__strapline

*/

/* HTML Example...

    .c-hero-block
        .c-hero-block__text
            h2.c-hero-block__title
            div.c-hero-block__strapline
                From world-class airlines to cruise lines. From start-ups to renowned brands.

*/

/* Modifiers...

    .c-hero-block--compressed
    .c-hero-block--compressed-totally
    .c-hero-block--compressed-b-1
    .c-hero-block--compressed-b-2
    .c-hero-block--compressed-t-1
    .c-hero-block--compressed-t-2

*/
@layer components {
    .c-hero-block {
        position: relative;
        display: flex;
        flex-wrap: wrap;
        flex-basis: 100%;
        justify-content: center;
        text-align: center;

        padding-block-end: var(--spacing-l-3-horizontal);
        padding-inline-end: var(--spacing-l-3-horizontal)
    }

    .c-hero-block > * {
        flex-basis: 100%;
    }

    .c-hero-block__text {
        max-width: 46rem;
    }

    .c-hero-block__title {
        padding-block-start: 0;

        font-size: var(--font-size-l-1);
        line-height: var(--font-size-l-1-line-height);
    }

    /* .c-hero-title--with-strapline { */
        /* Decrease */
    /*     padding-block-end: var(--spacing-m-2);
    } */

    /* e.g. div*/.c-hero-block__strapline {
        padding-block-end: var(--spacing-l-1);

        font-size: var(--font-size-s-1);
        color: var(--colour-grey-reading);
    }

    .c-hero-block + .c-hero-block {
        /* e.g. client logos AJAX'd in */
        padding-block-start: var(--spacing-m-2);
    }

    .c-hero-block img {
        filter: var(--image-boost);
    }
}
@layer modifiers {
    .c-hero-block--compressed .c-hero-block__text {
        /* e.g. >> /projects */
        padding-block-end: var(--spacing-l-1);
        padding-block-start: 0;
    }
}





/* GROUP COMPONENTS / FRAMEWORK / (NON CORE) / NAV
=================================================== */
/*

    Setup and Dependencies...

    [] 1. Decide whether you'd like to use any modifier classes/groups shown below. Remove any MODIFIER groups that are not needed.
        Modifier groups include choosing "when the grid breaks into further columns" (I suggest at 600px)
    [] 2. Add the JS found in script-non-core.js.

*/

/* HTML Example...

    The nav is flexible and derivative so it's best to view various examples rather than a specific
    markup example here.
    See one of the various demos in the CSS Framework

*/
/* GROUP COMPONENTS / FRAMEWORK / (NON CORE) / NAV / MODIFIER CLASSES
=================================================== */
/* Notes...

    Examples of nav modifier classes
    ------------
    .nav--centered
    The nav will be centered once it is horizontal

*/
@layer ui {
    /* GROUP COMPONENTS / FRAMEWORK / (NON CORE) / NAV / CURRENT PAGE
    =================================================== */
    /* Ancestors and Parents of Current Page */
    /* nav */
    .c-current-menu-ancestor > a span {
        color: rgba(var(--colour-turquoise-rgb),0.5);
    }
}
/* GROUP COMPONENTS / FRAMEWORK / (NON CORE) / NAV / MOBILE / (CROSS POLLINATED)
=================================================== */
/* HTML Example...

    <button class="c-nav-mobile-button js__navMobileButton u-js-only">
        <!-- Animate this when closed -->
        include 'img/svg/nav.php';
    </button>

*/
/* GROUP COMPONENTS / FRAMEWORK / (NON CORE) / NAV / MOBILE / BUTTON
=================================================== */
@layer components {
    /* button*/
    .c-nav-mobile-button {
        width: 100%;

        /* =JFG. Cancel any default button value */
        margin-inline-end: 0;

        font-size: 1.7em;
        /* Make sure it's dead center */
        line-height: 0;

        cursor: pointer;
    }

    /* Optional, if you want to include both an icon and text */
    /* HTML Example...

        <button class="c-nav-mobile-button js__navMobileButton u-js-only">
            <span class="c-nav-mobile-button__inner"> <-- this gets wrapped around the text and icon
                <span class="c-nav-icon">Menu</span>
                <!-- Animate this when closed -->
                include 'img/svg/nav.php';
            </span>
        </button>

    */
    .c-nav-mobile-button__inner {
        display: flex;
        justify-content: center;
        align-items: center
    }

    /* --mq-nav-opens-after */
    @media (min-width: 1200px) {
        /* div*/
        .c-nav-mobile-button {
            /* =JFG. Hide the toggle button now that nav is always visible */
            display: none;
        }
    }
}
/* GROUP COMPONENTS / FRAMEWORK / (NON CORE) / NAV / MOBILE / OPEN STATE
=================================================== */
@layer ui {
    /* --mq-nav-opens-before */
    @media (max-width: 1199px) {
        .js--navIsOpen {
            /* Prevent the body scrolling when the full height nav is open */
            overflow: hidden;
        }
    }
}
@keyframes fade-in {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}
@layer components {
    /* Since we're initially setting an opacity we should make sure animation is supported before doing this */
    @supports (animation-name: fade-in) {
        /* --mq-nav-opens-before */
        @media (max-width: 1199px) {
            .c-site-header__nav {
                overflow: scroll;

                & li {
                    opacity: 0;
                }
            }

            .js--navIsOpen .c-site-header__nav li {
                animation-name: fade-in;
                animation-duration: 0.9s;
                animation-fill-mode: forwards;
            }
            /* Staggered animation */
            .c-site-header__nav li {
                /* Default i.e. after 4th */
                animation-delay: calc(0.025s * 8);
            }
            .c-site-header__nav li:nth-child(1) {
                /* Need to give it at least a tiny bit (not 0s) otherwise blips on iOS */
                animation-delay: calc(0.025s * 1);
            }
            .c-site-header__nav li:nth-child(2) {
                animation-delay: calc(0.025s * 2);
            }
            .c-site-header__nav li:nth-child(3) {
                animation-delay: calc(0.025s * 4);
            }
            .c-site-header__nav li:nth-child(4) {
                animation-delay: calc(0.025s * 6);
            }
        }

        @keyframes wipe-in-down {
            from {
                clip-path: inset(0 0 100% 0);
            }
            to {
                clip-path: inset(0 0 0 0);
            }
        }
        @keyframes wipe-out-up {
            0% {
                clip-path: inset(0 0 0 0);
            }
            100% {
                clip-path: inset(0 0 100% 0);
                /* hide so that it doesn't make the .c-site-header tall, thus preventing anything underneath being clicked, even if it's invisible */
                height: 0;
                visibility: hidden;
                overflow: hidden;
            }
        }
        @keyframes collapse-height {
            0% {
                height: auto;
            }
            100% {
                height: 0;
            }
        }
        /* --mq-nav-opens-before */
        @media (max-width: 1199px) {
            .js:not(.js--navIsOpen):not(.js--navHasBeenOpened) .c-nav-mobile-button + nav {
                opacity: 0;
                pointer-events: none;
            }

            .js--navIsOpen .c-site-header__nav {
                /* You could also try something like in:circle:top-right here from https://www.transition.style */
                animation: 1s cubic-bezier(.25, 1, .30, 1) wipe-in-down both;
            }

            .js:not(.js--navIsOpen) {
                .c-site-header__nav {
                    animation: 1s cubic-bezier(.25, 1, .30, 1) wipe-up-out both;
                }
                .c-site-header {
                    /* Effectively hide the .c-site-header after wipe-up has finished, thus preventing anything underneath being clicked, even if it's invisible */
                    animation: 5s cubic-bezier(.25, 1, .30, 1) collapse-height both;
                }
            }
        }

        .js--navIsOpen .js__collapsedUntilNavOpened {
            display: block;
        }
    }
    /* GROUP COMPONENTS / FRAMEWORK / (NON CORE) / NAV / MOBILE / OPEN STATE / SVG ANIMATIONS
    =================================================== */
    .c-nav-line {
        transition: 0.25s ease-in-out;
        transform-origin: center;
    }

    .js--navIsOpen .c-nav-line--1 {
        opacity: 0;
        transition: 0.1s;
    }

    .js--navIsOpen .c-nav-line--2 {
        transform: rotate(45deg) translate(0.5px);
    }

    .c-nav-line--3 {
        opacity: 0;
    }

    .js--navIsOpen .c-nav-line--3 {
        opacity: 1;
    }

    .js--navIsOpen .c-nav-line--3 {
        transform: rotate(-45deg) translate(-0.5px);
    }

    .js--navIsOpen .c-nav-line--4 {
        opacity: 0;
    }
}




/* GROUP COMPONENTS / FRAMEWORK / (NON CORE) / NAV / GRID
=================================================== */
/* Notes...

    Transforms the nav menu into a grid of items
    i.e. an inline list.

*/
@layer scope {
    /* --mq-nav-switches-to-grid-after */
    @media (min-width: 600px) {
        .s-nav-grid-mq-600-up nav li {
            display: inline-block;
            text-align: left;
        }

        /* GROUP COMPONENTS / FRAMEWORK / (NON CORE) / NAV / GRID / ACCESSIBILITY
        =================================================== */
        .s-nav-grid-mq-600-up .js__u-js-hide {
            /* Cancel hiding of Skip to Content when we reach full nav break point,
            because now it's not possible to jump past the collapsed full nav */
            display: inline-block;
        }

        .s-nav-grid-mq-600-up .js__u-js-hide:focus {
            position: relative;
        }
    }
    /* GROUP COMPONENTS / FRAMEWORK / (NON CORE) / NAV / OPEN
    =================================================== */
    /* Optional force the nav to open */
    /* --mq-nav-opens-after */
    @media (min-width: 1200px) {
        /* div*/
        .s-nav-open-mq-1200-up .c-nav-mobile-button {
            /* =JFG. Hide the toggle button now that nav is always visible */
            display: none;
        }

        /* Need .js to trump .js .js__collapsedUntilNavOpened selector */
        .js .s-nav-open-mq-1200-up nav {
            /* =JFG. Ensure nav is above elements when sub-menus are positioned absolutely */
            position: relative;
            z-index: 2;
            /* =JFG. Cancel display: none; */
            display: block;
        }
    }
}



/* GROUP COMPONENTS / FRAMEWORK / (NON CORE) / NAV / MULTI LEVEL
=================================================== */
/* Notes...

    The same component name is needed from my JS framework

*/
.js nav ul ul:not(.js--menuActive) {
    /* START SCREEN READER TEXT
    --------------------------- */
    clip: rect(1px, 1px, 1px, 1px);

    position: absolute!important;
    overflow: hidden;
    width: 1px;
    height: 1px;
    /* END SCREEN READER TEXT
    ------------------------- */
}

@keyframes subnav {
    0% {
        opacity: 0;
        transform: translate(var(--translateX), -0.25rem);
    }

    75%, 100% {
        opacity: 1;
    }
}

nav ul {
    & li:has(ul ) {
        z-index: 1;
    }
    & ul {
        --padding: var(--spacing-m);
        --translateX: -50%; 

        flex-direction: column;
        gap: 0.25rem;

        position: absolute;
        top: 150%;
        left: 50%;
        transform: translate(var(--translateX));
        width: 100vw;
        max-width: min(68vw, 20rem);

        padding: var(--padding);

        &.js--menuActive {
            animation: 0.12s var(--animation-timing-function-in-sine) subnav both;
        }

        @media (min-width: 1024px) { /* --mq-nav-opens-after */
            --translateX: 0%;

            align-items: flex-start;
            width: 11rem;
            top: 3rem;
            left: calc(0% - var(--padding));
        }
    }
}



/* GROUP COMPONENTS / FRAMEWORK / (NON CORE) / SITE TITLE
=================================================== */
@layer objects {
    /* */.o-site-title,
    /* */.o-site-description {
        /* START SCREEN READER TEXT
        --------------------------- */
        clip: rect(1px, 1px, 1px, 1px);

        position: absolute!important;
        overflow: hidden;
        width: 1px;
        height: 1px;
        /* END SCREEN READER TEXT
        ------------------------- */
    }
}




/* GROUP COMPONENTS / FRAMEWORK / (NON CORE) / ENTRY / ENTRY HEADER
=================================================== */
@layer scope {
    .s-entry-header {
        max-width: var(--max-width-reading);
        padding-inline-start: var(--spacing-l);
        padding-block-end: var(--spacing-s-1);
        padding-inline-end: var(--spacing-l);
        clear: both;
    }

    /* Notes...

        e.g. <header class="entry-header s-entry-header{{ title | length > 40 ?= ' s-entry-header--with-long-title' }}">

    */
    /* .s-entry-header--with-long-title {

    } */

    .s-entry-header h1 {
        padding-block-end: var(--spacing-m);
    }

    .s-entry-header .entry-time {
        font-size: var(--font-size-s-x);
    }
}
/* GROUP SCOPE / FRAMEWORK / (NON CORE) / ENTRY / ENTRY TITLE
=================================================== */
@layer components {
    /* Notes...

        - Used to control titles, especially when you have different elements e.g. h2, h3, that all need to look the same

    */
    /* HTML Example...

        .s-entry-title
            h1

    */
    .s-entry-title {
        max-width: var(--max-width-2);
        margin-inline: auto;
        padding-inline: var(--spacing-l);
        padding-block-end: var(--spacing-s);
        & h1 {
            padding-block-start: var(--spacing-s);
            max-width: var(--max-width-reading);
            clear: both;
        }
    }
}
/* GROUP COMPONENTS / FRAMEWORK / (NON CORE) / ENTRY / ENTRY TITLE / (NON CORE) / INTRO
=================================================== */
@layer components {
    .c-entry-title--with-intro {
        padding-block-end: var(--spacing-s-x-x);
    }

    .c-entry-title-intro {
        padding-block-end: var(--spacing-l);
        text-align: center;
        /*line-height: var(--font-size-reading-line-height);*/
        /*font-size: 1.3em;*/
        /*color: var(--colour-pink);*/
        /*@apply --t-text-style-1-strong;*/
    }

    .c-entry-title-intro--s {
        padding-block-end: var(--spacing-s);
        padding-block-start: var(--spacing-s);
        /*padding-inline-start: var(--spacing-s);*/
        /*padding-inline-end: var(--spacing-s);*/
        /*margin-block-end: var(--spacing-l-1);*/
        /*margin-top: var(--spacing-s-1);*/
        /*font-size: 1em;*/
    }
}
/* GROUP SCOPE / FRAMEWORK / ENTRY / ENTRY CONTENT
=================================================== */
/* Notes...

    - Based on WordPress Genesis Entry Content but tailored for neutral frameworks

*/
/* HTML Example...

    <article>
        <h1>Title</h1>
        <div class="s-entry-content-wrapper"> <-- controls the max-width
            <div class="s-entry-content">
                Entry content
            </div>
        <div>
    </article>

*/
@layer scope {
    .s-entry-content-wrapper {
        margin-inline: auto;
        padding-inline: var(--spacing-l);
        padding-block: var(--spacing-l-4);
    }
    .s-entry-content {
        max-width: var(--max-width-1);
        margin-inline: auto;
        padding-block-end: var(--spacing-l);

        & > * {
            max-width: var(--max-width-reading);
        }

        & > .h1 {
            padding-block-start: 0;
        }

        :is(ol, ul) {
            padding-inline-start: 0.8rem;
        }

        & p + :is(ol, ul) {
            padding-block-start: var(--spacing-s);
            padding-block-end: var(--spacing-l);
        }

        & li :is(ol, ul) {
            /* e.g.

            <ul>
                <li>something</li>
                <li>something else
                    <ol> <-- we don't want this to have extra padding

            */
            padding-inline: 0;
            padding-block-start: 0;
        }

        & li {
            /* e.g. ul li */
            padding-inline-start: var(--spacing-s-x-x);

            /* Bard wraps <li> text in a <p> tag */
            & p {
                padding-block-end: 0!important;
            }
        }

        /* e.g. when we have .s-entry-child divs following each other with blocks */
        &:last-child,
        /* e.g. cancel the last p tag from adding to the VERTICAL SPACING */
        & > *:last-child {
            padding-block-end: 0;
        }

        /* e.g. an img output wrapped in a figure element */
        & figure {
            margin: 0;
        }

        &:has(+ .s-entry-content--inline-image) {
            /* Increase - push an inline image away from the paragraph above */
            padding-block-end: var(--spacing-l-3);
        }
    }

    /* -- */

    /* Custom */
    @media (min-width: 768px) {
        .s-entry-content--inline-quote blockquote {
            float: left;
            width: 32.8%;
            margin-inline-end: var(--spacing-l-1);
        }
    }

    /* -- */

    .s-entry-content--inline-image {
        width: 68.1%;
        padding-inline-end: var(--spacing-l-1); /* Increase */
        /* Custom */
        @media (min-width: 650px) {
            width: 38.2%;
            float: left;
        }
    }
}




/* GROUP COMPONENTS / FRAMEWORK / (NON CORE) / ENTRY / ENTRY CONTENT / (MODIFIERS)
=================================================== */
@layer scope {
    /*.s-entry-content--hero,*/
    .s-entry-content--intro {
        /* e.g. Gallery page intro
            Do not apply to all .s-entry-content because it has undesirable consequences like making iframes disappear
        */
        /* Horizontal text */
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .s-entry-content--with-lead > p:first-child {
        font-weight: var(--font-family-main-weight-strong);
    }

    .s-entry-content--hero {
        padding-block-end: var(--spacing-l);
    }

    .s-entry-content--compressed {
        padding-block-end: var(--spacing-m-1);
    }

    .s-entry-content--compressed-totally {
        /* e.g. a Perch block, where we have lots of `.s-entry-content`s stacked on top of each other */
        padding-block-end: 0;
    }
    /* GROUP COMPONENTS / FRAMEWORK / (NON CORE) / ENTRY / ENTRY CONTENT / (MODIFIERS) / VIDEO
    =================================================== */
    .s-entry-content--video .js--video {
        margin-block-end: 0;
    }

    .s-entry-content--video .js--video + p {
        margin-top: var(--spacing-s-1);
    }
}




/* GROUP UTILTIES / FRAMEWORK / (NON CORE)
=================================================== */
@layer utilities {
    /* For when something is revealed with JS, but if JS is not available show it */
    .js .u-js-hide {
        display: none;
    }

    /* Hide visually and from screen readers */
    .u-hidden {
        display: none!important;
    }

    .u-link-style-none,
    .u-link-style-none * {
        font-weight: inherit;
        text-decoration: none;
        color: inherit;
        border-bottom: 0;
    }

    /* Needed for when you declare width and height attributes to improve loading lazy images */
    /* picture*/
    .u-full-width-image img {
        width: 100%;
    }

    /* Use this class when you're intentionally not adding an alt tag e.g. it's a decorational image */
    img.no-alt {
        border: initial;
    }

    /* GROUP UTILITIES / FRAMEWORK / (NON CORE) / LINE CLAMP
    =================================================== */
    /* e.g. <div class="u-line-clamp" style="--clamp: 3;"> */
    .u-line-clamp {
        display: -webkit-box;
        -webkit-box-orient: vertical;
        overflow: hidden;
        /* Stop padding ruining the clamp */
        padding-block-end: 0;
        -webkit-line-clamp: var(--clamp, 2);
    }

    /* Custom */
    @media (max-width: 767px) {
        .u-line-clamp--mq-768-up {
            -webkit-line-clamp: unset;
        }
    }

    /* Notes...

        - See also https://css-tricks.com/almanac/properties/l/line-clamp/ {/ LINE CLAMP}
    */
    .u-ellipsis {
        display: block;
        /* =JFG. Need to be inline-block or block to enable ellipsis */
        white-space: nowrap;
        /* 'overflow' value must be different from 'visible' */
        overflow: hidden;
        text-overflow: ellipsis;
        /* Optional */
        max-width: 95%;
    }
    /* GROUP UTILITIES / (NON CORE) / STICKY FOOTER
    =================================================== */
    /* Source:http://codepen.io/astrotim/pen/PwYQOJ */

    /* HTML Example...

        <body>
            <main>
                main content here
            </main>
        </body>

        <footer class="u-sticky-footer">
        </footer>

    */

    html, body {
        min-height: 100vh;
    }

    body:has(.u-sticky-footer) {
        display: flex;
        flex-direction: column;
    }
    /* This gets in the way */
    body:has(.u-sticky-footer) + grammarly-desktop-integration {
        display: none;
    }

    main {
        flex-grow: 1;
    }
    /* GROUP UTILTIES / FRAMEWORK / (NON CORE) / ICONS / SIZING
    =================================================== */
    /* These is explicit, so override any automatic rules above with !important */
    .u-icon-right-x-x {
        margin-inline-start: var(--spacing-icon-s)!important;
    }

    .u-icon-right-x {
        margin-inline-start: var(--spacing-icon-m)!important;
    }

    .u-icon-left-x {
        margin-inline-end: var(--spacing-icon-m)!important;
    }

    .u-icon-left {
        margin-inline-end: var(--spacing-icon-l)!important;
    }

    .u-icon-right {
        margin-inline-start: var(--spacing-icon-l)!important;
    }

    .u-icon-s {
        font-size: var(--icon-size-s);
    }

    .u-icon-m {
        font-size: var(--icon-size-m);
    }
    /* GROUP UTILTIES / FRAMEWORK / (NON CORE) / ANIMATIONS / KEYFRAMES
    =================================================== */
    /* Components > Framework > Nav */
    @keyframes fade-in {
        0% {
            opacity: 0;
        }

        100% {
            opacity: 1;
        }
    }
    @keyframes fade-in-up {
        0% {
            opacity: 0;
            transform: translate3d(0, 5vh, 0);
        }

        75%, 100% {
            opacity: 1;
            transform: none;
        }
    }
    @keyframes in-up {
        0% {
            transform: translate3d(0, 5vh, 0);
        }

        75%, 100% {
            transform: none;
        }
    }
    @keyframes pull-up {
        100% {
            transform: translateY(-100%);
        }
    }
    @keyframes rotate-in-up {
        0% {
            transform: translate3d(0, 100vh, 0) rotate(-90deg);
        }

        75%, 100% {
            opacity: 1;
            transform: none;
        }
    }
    @keyframes rotate-in-up-reverse {
        0% {
            transform: translate3d(0, 100vh, 0) rotate(90deg);
        }

        75%, 100% {
            opacity: 1;
            transform: none;
        }
    }
    @keyframes wipe-out-up {
        0% {
            clip-path: inset(0 0 0 0);
        }
        100% {
            clip-path: inset(0 0 100% 0);
        }
    }
    @keyframes wipe-in-left {
        1%, 100% { opacity: 1; }
        from {
            clip-path: inset(0 0 0 100%);
        }
        to {
            clip-path: inset(0 0 0 0);
        }
    }
    @keyframes wipe-out-left {
        1%, 100% { opacity: 1; }
        from {
            clip-path: inset(0 0 0 0);
        }
        to {
            clip-path: inset(0 100% 0 0);
        }
    }
    @keyframes wipe-in-right {
        1%, 100% { opacity: 1; }
        from {
            clip-path: inset(0 100% 0 0);
        }
        to {
            clip-path: inset(0 0 0 0);
        }
    }
    @keyframes circle-in-center {
        from {
            clip-path: circle(0%);
        }
        to {
            clip-path: circle(100%);
        }
    }
    @keyframes circle-in-top-right {
        1%, 100% { opacity: 1; }
        from {
            clip-path: circle(0%);
            opacity: 0;
        }
        to {
            clip-path: circle(150% at top right);
        }
    }
    @keyframes circle-in-top-left {
        1%, 100% { opacity: 1; }
        from {
            clip-path: circle(0%);
            opacity: 0;
        }
        to {
            clip-path: circle(150% at top left);
        }
    }
    @keyframes slit-reveal {
        0% {
            clip-path: polygon(100% 0, 100% 0%, 100% 0, 0 100%, 0% 100%, 0 100%);
        }
        100% {
            clip-path: polygon(50% 0, 100% 0%, 100% 50%, 50% 100%, 0% 100%, 0 50%);
        }
    }
}
/* GROUP UTILITIES / FRAMEWORK / ANNI
=================================================== */
@layer utilities {
    @media not (prefers-reduced-motion: reduce) {
        /* Notes...

            - My own mini animation framework. Very very basic. Essentially just variables and class names.
            - I've called it ANNI so it's easy to find it with cmd + f
            - Override defaults like this `<div class="u-anni-fade-in" style="--anni-duration: 0.9s">`

        */
        .u-anni-fade-in {
            animation: var(--anni-duration) linear fade-in both;
        }
        .u-anni-fade-in-up {
            --anni-stagger: 0.2s;
            animation: var(--anni-duration) var(--animation-timing-function-linear-out-slow-in) fade-in-up both;
        }
        .u-anni-wipe-out-up {
            animation: var(--anni-duration) var(--animation-timing-function-wipe) wipe-out-up both;
        }
        [class*="u-anni-"] {
            animation-delay: var(--anni-stagger, 0s);
        }
        /* GROUP UTILITIES / FRAMEWORK / ANNI / ANIMATIONS / STAGGERING
        =================================================== */
        /* When an animated item is followed by another item then add a default delay */
        [class*="u-anni-"] + [class*="u-anni-"] {
            animation-delay: calc(var(--anni-stagger));
        }
        [class*="u-anni-"] + [class*="u-anni-"]:nth-child(2) {
            animation-delay: calc(var(--anni-stagger) * 2);
        }
        [class*="u-anni-"] + [class*="u-anni-"]:nth-child(3) {
            animation-delay: calc(var(--anni-stagger) * 3.5);
        }
        [class*="u-anni-"] + [class*="u-anni-"]:nth-child(4) {
            animation-delay: calc(var(--anni-stagger) * 4);
        }
        [class*="u-anni-"] + [class*="u-anni-"]:nth-child(5) {
            animation-delay: calc(var(--anni-stagger) * 4.5);
        }
        [class*="u-anni-"] + [class*="u-anni-"]:nth-child(6) {
            animation-delay: calc(var(--anni-stagger) * 5);
        }
        [class*="u-anni-"] + [class*="u-anni-"]:nth-child(7) {
            animation-delay: calc(var(--anni-stagger) * 5.5);
        }
        [class*="u-anni-"] + [class*="u-anni-"]:nth-child(8) {
            animation-delay: calc(var(--anni-stagger) * 6);
        }
        [class*="u-anni-"] + [class*="u-anni-"]:nth-child(9) {
            animation-delay: calc(var(--anni-stagger) * 6.5);
        }
        /* GROUP UTILTIES / FRAMEWORK / (NON CORE) / ANIMATIONS / VIEW TRANSITIONS
        =================================================== */
        .u-transition-wipe-out-up {
            view-transition-name: wipe-out-up;
        }
        ::view-transition-old(wipe-out-up) {
            animation: var(--anni-duration) var(--animation-timing-function-wipe) wipe-out-up both;
        }
        ::view-transition-new(wipe-out-up) {
            animation: 2.9s var(--animation-timing-function-wipe) wipe-in-down both;
        }
        .u-transition-pull-up {
            view-transition-name: pull-up;
        }
        ::view-transition-old(pull-up) {
            animation: 0.75s var(--animation-timing-function-linear-out-slow-in) pull-up both;
        }
    }
}

@layer utilities {
    /* GROUP UTILITIES / ANIMATION / IO FRAMEWORK (Authored by me)
    =================================================== */
    /* Notes...

        - My own mini framework that operates similar to [AOS](https://michalsnik.github.io/aos/) but much simpler
        - See `script.js` under `GROUP SCROLL TRIGGER WITH INTERSECTION OBSERVER` for the script, below are CSS examples to go with this

        Using a Hidden Trigger
        ----------------------
        - If you need to place a hidden trigger at the bottom of the page you can use :has in combination with something like this `<div data-io-repeat data-io-hidden-trigger style="position: absolute; height:90vh;"></div>`
            - data-io-hidden-trigger doesn't do anything; it's just an object you can test for like so: [data-io-hidden-trigger][data-io-seen]
            see readme.css for more info

    */


    /* This is needed for Live Preview hot reloading. Hot reloading conflicts with intersection observer. If we don't disable intersection observer animations then everything stays hidden since IO doesn't get triggered. */
    .js--statamicLivePreview :where([data-io], [data-io-repeat]) {
        animation: unset!important;
        opacity: unset!important;
        transform: unset!important;
    }
    /* If they're ok with animation */
    @media (prefers-reduced-motion: no-preference) {
        /* Defaults */
        :where([data-io], [data-io-repeat]) {
            /* We can't apply data attributes directly to inline SVGs in Statamic, so you could wrap a div around it like this: <div data-io-repeat data-io--slit-reveal>{{ svg src='motif' class='c-small-motif u-animated-motif-slit' }}</div> */
            &, & > svg {
                --io-duration: 1.2s;
                --io-delay: 0.4s;
                --io-stagger: 0.2s;

                animation-fill-mode: both;
                animation-delay: var(--io-delay);
                animation-duration: var(--io-duration);
            }
        }

        /* When an item is followed by another item then add a default delay */
        [data-io][class*="__"] + [data-io][class*="__"] {
            animation-delay: calc(var(--io-delay) + var(--io-stagger));
        }
        [data-io][class*="__"] + [data-io][class*="__"]:nth-child(2) {
            animation-delay: calc(var(--io-delay) + var(--io-stagger) * 2);
        }
        [data-io][class*="__"] + [data-io][class*="__"]:nth-child(3) {
            animation-delay: calc(var(--io-delay) + var(--io-stagger) * 3);
        }
        [data-io][class*="__"] + [data-io][class*="__"]:nth-child(4) {
            animation-delay: calc(var(--io-delay) + var(--io-stagger) * 4);
        }
        /* etc. */

        /* Delays */
        [data-io--delay],
        [data-io--delay]::before {
            /* Add a custom delay like this: <div data-io data-io--delay style="--io-delay: 5s"></div> */
            /* Or in Statamic Antlers data-io--delay{{ index < 6 ?= ' style="--io-delay: 0.{{ index | multiply(2) }}s"' }} */
            /* 1.5s if --io-delay is not defined */
            animation-delay: var(--io-delay, 1.5s)!important;
        }
        /* GROUP UTILITIES / ANIMATION / IO FRAMEWORK / FADES
        =================================================== */
        .js {
            :where([data-io--fade-in], [data-io--fade-in-up], [data-io--slide-up-and-fade-in]) {
            /* :where([data-io--slide-up-and-fade-in], [data-io--rotate-in-up]) { */
                /* Start off with a 0 opacity (rather than hidden) so browsers can still "see" the element. You'll need 1%, 100% { opacity: 1; } on each keyframe to make them appear immediately, unless you're using a fade anyway */
                opacity: 0;
            }
            /* I've commented out animations that typically are not used. Delete them or uncomment */
            /* Fade in */
            [data-io--fade-in][data-io-seen] {
                animation-name: fade-in;
                animation-timing-function: var(--animation-timing-function-out-cubic);
            }
            /* Fade in up */
            [data-io--fade-in-up][data-io-seen] {
                --io-delay: 0.1s;
                --io-duration: 1s;
                animation-name: fade-in-up;
                animation-timing-function: var(--animation-timing-function-linear-out-slow-in);
            }
            /* In up */
            [data-io--in-up][data-io-seen] {
                animation-name: in-up;
                animation-timing-function: var(--animation-timing-function-linear-out-slow-in);
            }
            /* Slide Up and Fade In */
            /* [data-io--slide-up-and-fade-in][data-io-seen] {
                animation-name: slide-up-and-fade-in;
                animation-timing-function: var(--animation-timing-function-out-cubic);
            } */
            /* Rotate In Up */
            /* [data-io--rotate-in-up][data-io-seen] {
                animation-name: rotate-in-up;
                animation-timing-function: var(--animation-timing-function-out-cubic);
            }
            [data-io--rotate-in-up--reverse][data-io-seen] {
                animation-name: rotate-in-up-reverse;
            } */
            /* GROUP UTILITIES / ANIMATION / IO FRAMEWORK / WIPES
            =================================================== */
            /* e.g. <p class="c-intro-text" data-io data-io--wipe-in-right>At Assured</p> */
            /* handy to use switch like data-io data-io--wipe-in-{{ switch between='right|left' }} */
            /* [data-io-seen][data-io--wipe-in-right] {
                animation: var(--io-duration) var(--animation-timing-function-wipe) wipe-in-right both;
            }
            [data-io-seen][data-io--wipe-in-left] {
                animation: var(--io-duration) var(--animation-timing-function-wipe) wipe-in-left both;
            }
            [data-io-seen][data-io--circle-in-center] {
                animation: var(--io-duration) var(--animation-timing-function-wipe) circle-in-center both;
            }
            [data-io-seen][data-io--circle-in-top-right] {
                animation: 4s var(--animation-timing-function-wipe) circle-in-top-right both;
            }
            [data-io-seen][data-io--circle-in-top-left] {
                animation: 4s var(--animation-timing-function-wipe) circle-in-top-left both;
            } */
            /* GROUP UTILTIES / ANIMATIONS / IO FRAMEWORK / MOTIF SLIT
            =================================================== */
            /* Using my IO framework */
            /* [data-io-seen][data-io--slit-reveal] svg {
                --io-delay: inherit;
                --io-duration: 1.5s;
                animation-name: slit-reveal;
                animation-timing-function: var(--animation-timing-function-in-sine);
            } */
            /* GROUP UTILTIES / ANIMATIONS / IO FRAMEWORK / HIDERS
            =================================================== */
            /* @media (max-width: 767px) {
                [data-io--desktop-only] {
                    animation: unset;
                    opacity: unset;
                }
            } */
        }
    }
}

@layer utilities {
    /* GROUP UTILITIES / ANIMATION / IO FRAMEWORK / ONLY ANIMATE ONCE PER SESSION
    =================================================== */
    /* Notes...

        - This works by checking the previous page, or the 'referrer'
        - If we're coming from 'within' the current site then we add a class to prevent further animation
        - Add to the head with inline script so it executes faster
        - You can then do something like this:

        // Stop the animation if it's already happened
        .js--animationHasAlreadyHappenedThisSession .u-animate-once-per-session {
            animation-duration: 0s!important;
            animation-delay: 0s!important;
        }

        JS Example...
        if(document.referrer.includes('filomena.and.jaygeorge')) {
            document.querySelector('html').classList.add('js--animationHasAlreadyHappenedThisSession');
        };
    */
    /* GROUP UTILITIES / DECORATION
    =================================================== */
    .u-texture {
        background-image: url(/img/textures/something.jpg);
    }
}

@layer utilities {
    /* GROUP UTILITIES / DECORATION / PANELS
    =================================================== */
    /* Notes...

        Here we attach the panel class directly to the component so that:

        - We can still make use of adjacent selectors to control spacing such as .component + .component without a panel parent getting in the way
        - Instead of .u-panel + .u-panel rules to create spacing, be more explicit and use .o-slide
        - Note that it's generally better to use margin-block-end on components because for example a 90% stop will be 90% height of the component rather than 90% height of the component + it's padding below

    */

    /* HTML Example...

        <footer class="c-site-footer u-panel u-panel--dark" style="--panel-background-colour: var(--colour-purple-deep); --panel-text-colour: white;">

    */
    /* some-class*/
    .u-panel {
        position: relative;

        &::after {
            content: "";
            position: absolute;
            top: 0;
    
            height: 100%;
            background: var(--panel-background-colour, var(--colour-secondary-background));
            z-index: -1;
    
            /* Object > Framework > (Non Core) > Layout > Full Width {Bust Out Of Container} */
            width: 100vw;
            left: 50%;
            right: 50%;
            margin-inline: -50vw;
        }

        & * {
            color: var(--panel-text-colour, var(--colour-secondary-text));
        }
    }

    /* Explicit */
    .u-panel--grey-light {
        &::after {
            background: var(--colour-grey-light);
        }
        & * {
            color: black;
        }
    }
    .u-panel--dark * {
        color: white;
    }
    .u-panel--light * {
        color: black;
    }

    /* For forms */
    .u-panel--dark [placeholder],
    .u-panel--dark ::-webkit-input-placeholder,
    .u-panel--dark ::placeholder {
        opacity: 1;
        color: white;
        background: var(--colour-purple-transparent);
    }

    /* Notes...

        - If you're using this on a component with margin-block-end rather than padding-block-end then I'd recommend you add a .component-wrapper and add .u-panel.u-panel--split there instead. This will get around the problem of extending the split below the component to join the next panel.
        - To adjust panels for mobile you can add an override on a case-by-case basis, e.g. ...

        @media (max-width: 899px) {
            .c-text-and-motif.u-panel {
                --panel-stop-1: 5%!important;
            }
        }
        - You could also use the .u-panel--higher-mqs modifier to remove the panel for mobile

    */
    /* HTML Example...

        - You can use it with either 1 or 2 stops.
        - Note that it's generally better to use margin-block-end on components because for example a 90% stop will be 90% height of the component rather than 90% height of the component + it's padding below

        Here is an example of 1 stop:
        <div class="c-something u-panel u-panel--split" style="--panel-background-colour-start: var(--colour-grey-light); --panel-background-colour-end: white; --panel-stop-1: 80%;">

        Here is an example of 2 stops:
        <div class="c-something u-panel u-panel--split" style="--panel-background-colour-start: white; --panel-background-colour-end: var(--colour-grey-light); --panel-stop-1: 10%; --panel-stop-2: 90%;">

    */
    /* Statamic Example...
        See this group in README.css
    */
    .u-panel--split::after {
        background: linear-gradient(to bottom,
            var(--panel-background-colour-start) var(--panel-stop-1, 50%),
            var(--panel-background-colour-end) var(--panel-stop-1, 50%),
            var(--panel-stop-2, 101%),
            var(--panel-background-colour-start) var(--panel-stop-2, 101%)
        );
    }
    /* Custom */
    @media (max-width: 1023px) {
        .u-panel--higher-mqs::after {
            /* Remove */
            content: unset!important;
        }
    }
    /* GROUP UTILITIES / FRAMEWORK / SPACING
    =================================================== */
    .u-px-l {
        padding-inline: var(--spacing-l);
    }

    .u-px-l-1 {
        padding-inline: var(--spacing-l-1);
    }
    /* GROUP UTILITIES / FRAMEWORK / (NON-CORE) / LAYOUT / HIDERS
    =================================================== */
    /* Custom */
    @media (max-width: 1099px) {
        .u-mq-1100-up {
            display: none!important;
        }
    }
    /* GROUP UTILITIES / FRAMEWORK / LAYOUT / CONSTRAINTS / MAX
    =================================================== */
    [class*="u-mx-"] {
        position: relative;
        margin-inline: auto;
    }

    .u-mx-1 {
        max-width: var(--max-width-1);
    }

    .u-mx-2 {
        max-width: var(--max-width-2);
    }

    .u-mx--uncentered {
        margin-left: 0;
    }
}